<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             x:Class="TocTocToc.Views.AdvertisingAddOrModifyPage"
             x:Name="ContentPage"
             xmlns:viewModels="clr-namespace:TocTocToc.Models.View;assembly=TocTocToc"
             xmlns:converters="clr-namespace:TocTocToc.Converters;assembly=TocTocToc">
    <!--x:DataType="viewModels:AdvertisingViewModel">-->
    <ContentPage.BindingContext>
        <viewModels:AdvertisingAddOrModifyViewModel/>
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:IsEnabledConverter x:Key="IsEnabledConverter" />
            <xct:TextCaseConverter x:Key="TextConverter"/>
            <xct:ItemSelectedEventArgsConverter x:Key="ItemSelectedEventArgsConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{xct:Translate LabelTitleAdvertisement}"
                     Order="Primary"
                     Priority="0" />
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <Grid RowDefinitions="*, Auto" ColumnDefinitions="Auto">

            <ScrollView Grid.Row="0">
                <Grid RowDefinitions="40, 40, 40, 40, 40, 40, 40, 40, 200" ColumnDefinitions="*,*"
                      Margin="20, 20, 20, 0">

                    <!--Row 0-->
                    <Button Grid.Row="0" Grid.ColumnSpan="2"
                            IsVisible="{Binding !IsImage}"
                            Command="{Binding AddMediaAsyncCommand}" Text="{xct:Translate LabelAdvertisingAddMedia}" TextColor="White"
                            BorderColor="{StaticResource ButtonBorderColor}" BorderWidth="1" CornerRadius="10" BackgroundColor="{StaticResource ButtonColorDetails}"/>
                    <Button Grid.Row="0" Grid.ColumnSpan="2"
                            IsVisible="{Binding IsImage}"
                            Command="{Binding UpdateMediaAsyncCommand}" Text="{xct:Translate LabelAdvertisingUpdateMedia}" TextColor="White"
                            BorderColor="{StaticResource ButtonBorderColor}" BorderWidth="1" CornerRadius="10" BackgroundColor="{StaticResource ButtonColorDetails}"/>

                    <!--Row 1 Title / Description -->
                    <Entry Grid.Row="1" Grid.Column="0"
                           IsEnabled="{Binding IsIdPublic}"
                           Text="{Binding Name}" TextColor="Black"
                           Placeholder="{xct:Translate LabelAdvertisingName}">
                        <Entry.Behaviors>
                            <xct:EventToCommandBehavior 
                                EventName="Unfocused"
                                Command="{Binding ValidationEntriesAsyncCommand}"/>
                        </Entry.Behaviors>
                    </Entry>
                        <!--x:Name="XNameDescriptionButton"-->
                    <Button Grid.Row="1" Grid.Column="1"
                            Command="{Binding AddDescriptionAsyncCommand}"
                            IsEnabled = "{Binding IsIdPublic}"
                            Text="{xct:Translate LabelDescription}" TextColor="White"
                            BorderColor="{StaticResource ButtonBorderColor}" BorderWidth="1" CornerRadius="10" BackgroundColor="{StaticResource ButtonColorDetails}"/>

                    <!--Row 2 Area-->
                    <Button Grid.Row="2" Grid.ColumnSpan="2"
                            Command="{Binding AddAreaSelectAsyncCommand}"
                            IsEnabled="{Binding IsIdPublic}"
                            Text="{xct:Translate LabelArea}" TextColor="White"
                            BorderColor="{StaticResource ButtonBorderColor}" BorderWidth="1" CornerRadius="10" BackgroundColor="{StaticResource ButtonColorDetails}"/>

                    <!--Row 3 Gender / Age-->
                    <Picker Grid.Row="3" Grid.Column="0"
                            IsEnabled="{Binding IsIdPublic}"
                            FontSize="17" TextColor="Black"
                            Title="{xct:Translate LabelGender}"
                            ItemsSource="{Binding GendersItem}"
                            ItemDisplayBinding="{Binding Item}"
                            SelectedItem="{Binding SelectedItemGender}"/>
                    <Button Grid.Row="3" Grid.Column="1"
                            Command="{Binding AddAgeAsyncCommand}"
                            Text="{xct:Translate LabelAge}" TextColor="White"
                            BorderColor="{StaticResource ButtonBorderColor}" BorderWidth="1" CornerRadius="10" BackgroundColor="{StaticResource ButtonColorDetails}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource IsEnabledConverter}">
                                <Binding Path="IsIdPublic"/>
                                <Binding Path="IsEnabledComponent"></Binding>
                            </MultiBinding>
                        </Button.IsEnabled>

                    </Button>

                    <!--Row 4 Interest -->
                    <!--TextChanged="{Binding InterestText, Mode=TwoWay}" Unfocused="OnInterestUnfocused"-->
                    <Entry Grid.Row="4" Grid.ColumnSpan="2"
                           IsEnabled="{Binding IsIdPublic}"
                           Text="{Binding Interests}"
                           Margin="0"
                           IsSpellCheckEnabled="True"
                           TextColor="Black"
                           Placeholder="{xct:Translate LabelInterests}">
                        <Entry.Behaviors>
                            <xct:EventToCommandBehavior
                                EventName="TextChanged"
                                Command="{Binding InterestTextChangedAsyncCommand}"/>
                            <!--<xct:EventToCommandBehavior
                                EventName="Completed"
                                Command="{Binding InterestCompletedAsyncCommand}"/>-->
                            <xct:EventToCommandBehavior 
                                EventName="Unfocused"
                                Command="{Binding InterestUnfocusedAsyncCommand}"/>
                        </Entry.Behaviors>
                    </Entry>

                    <!--Row 5 Budget-->
                    <Button Grid.Row="5" Grid.ColumnSpan="2"
                            Command="{Binding BudgetAsyncCommand}"
                            Text="{xct:Translate LabelBudget}" TextColor="White"
                            BorderColor="{StaticResource ButtonBorderColor}" BorderWidth="1" CornerRadius="10" BackgroundColor="{StaticResource ButtonColorDetails}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource IsEnabledConverter}">
                                <Binding Path="IsIdPublic"/>
                                <Binding Path="IsEnabledComponent"></Binding>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>

                    <!--Row 6 Save / History-->
                    <Button Grid.Row="6" Grid.Column="0"
                            Command="{Binding SaveAdvertisementAsyncCommand}"
                            Text="{xct:Translate LabelSave}" TextColor="White"
                            BorderColor="{StaticResource ButtonBorderColor}" BorderWidth="1" CornerRadius="10" BackgroundColor="{StaticResource ButtonColorValidation}">
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource IsEnabledConverter}">
                                <Binding Path="IsIdPublic"/>
                                <Binding Path="IsEnabledComponent"></Binding>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <Button Grid.Row="6" Grid.Column="1"
                            Command="{Binding HistoryAsyncCommand}"
                            IsEnabled="{Binding IsEnabledComponent}"
                            Text="{xct:Translate LabelHistory}" TextColor="White"
                            BorderColor="{StaticResource ButtonBorderColor}" BorderWidth="1" CornerRadius="10" BackgroundColor="{StaticResource ButtonColorValidation}"/>

                    <!--Row 7-->
                    <Label Grid.Row="7" Grid.ColumnSpan="2"
                           VerticalTextAlignment="Center" HorizontalTextAlignment="Center"
                           TextColor="{StaticResource LabelColor}" Text="{xct:Translate LabelPreview}"/>

                    <!--Row 8-->
                    <Image Grid.Row="8" Grid.ColumnSpan="2"
                           HorizontalOptions="Center" Source="{Binding FullPathImage}">
                        <Image.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ShowMediaDetailsAsyncCommand}" CommandParameter="{Binding .}" NumberOfTapsRequired="1" />
                            <TapGestureRecognizer Command="{Binding UpdateMediaAsyncCommand}" NumberOfTapsRequired="2" />
                        </Image.GestureRecognizers>
                    </Image>

                    <!--Row 4 Interest at the end of the grid to over layout all the element  -->
                    <ListView Grid.Row="4" Grid.RowSpan="4" Grid.ColumnSpan="2"
                              Margin="10, 35, 10, 0"
                              VerticalOptions="Start" HorizontalOptions="Fill" HeightRequest="120"
                              CachingStrategy="RecycleElement" BackgroundColor="White"
                              IsVisible="{Binding IsInterestSuggestions}"
                              ItemsSource="{Binding InterestSuggestions}"
                              SelectedItem="{Binding SelectedInterest, Mode=TwoWay}"
                              IsRefreshing="{Binding IsInterestBusy, Mode=OneWay}">
                        <ListView.Behaviors>
                            <xct:EventToCommandBehavior
                                EventName="ItemSelected"
                                Command="{Binding InterestItemTappedAsyncCommand}"
                                EventArgsConverter="{StaticResource ItemSelectedEventArgsConverter}">
                            </xct:EventToCommandBehavior>
                        </ListView.Behaviors>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell>
                                    <Frame>
                                        <StackLayout BackgroundColor="White">
                                            <Label Text="{Binding Item}" FontSize="16" TextColor="#FF464859"/>
                                        </StackLayout>
                                    </Frame>
                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                </Grid>
            </ScrollView>


            <Button Grid.Row="1"
                    Command="{Binding PayAsyncCommand}"
                    IsEnabled="{Binding IsPayingButton}"
                    TextColor="White" Text="{xct:Translate LabelValidationPay}"
                    BorderColor="{StaticResource ButtonBorderColor}" BorderWidth="1" BackgroundColor="#61007D"/>

        </Grid>
    </ContentPage.Content>
</ContentPage>
