<?xml version="1.0" encoding="utf-8" ?>
<xct:Popup xmlns="http://xamarin.com/schemas/2014/forms"
           xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
           xmlns:xct="clr-namespace:Xamarin.CommunityToolkit.UI.Views;assembly=Xamarin.CommunityToolkit"
           xmlns:viewModels="clr-namespace:TocTocToc.Models.View;assembly=TocTocToc"
           xmlns:triggers="clr-namespace:TocTocToc.Shared;assembly=TocTocToc"
           xmlns:behaviors="http://xamarin.com/schemas/2020/toolkit"
           x:Class="TocTocToc.Popup.AreaSelectPopup"
           x:Name="XNameAreaSelectPopupPage"
           Size="340,340">
    <!--     xmlns:areaSelectedDtoModel="clr-namespace:TocTocToc.Models.Dto;assembly=TocTocToc"
             x:TypeArguments="areaSelectedDtoModel:AreaSelectedDtoModel"-->
    <xct:Popup.BindingContext>
        <viewModels:AreaSelectPopupViewModel/>
    </xct:Popup.BindingContext>
    <xct:Popup.Resources>
        <ResourceDictionary>
            <behaviors:ItemSelectedEventArgsConverter x:Key="ItemSelectedEventArgsConverter"/>
        </ResourceDictionary>
    </xct:Popup.Resources>
    <xct:Popup.Content>
        <Grid RowDefinitions="Auto, Auto, Auto, Auto, 10, Auto" ColumnDefinitions="*, Auto, Auto"
              Padding="10"
              BackgroundColor="DarkCyan">
            <ActivityIndicator Grid.RowSpan="6" Grid.ColumnSpan="3" IsVisible="{Binding IsBusy}" IsRunning="{Binding IsBusy}"  Margin="140"  Color="White"/>

            <!--Country-->
            <Label Grid.Row="0"
                   Text="{Binding CountryText}"/>
            <StackLayout Grid.Row="0" Grid.Column="1"
                         VerticalOptions="Center" Orientation="Horizontal"
                         IsVisible="{Binding IsCountryCheckBoxVisible}">
                <!--CheckedChanged="{Binding CountryCheckBoxAsyncCommand}"-->
                <CheckBox Color="#ebb549"
                          IsChecked="{Binding IsAllCountry}">
                    <CheckBox.Behaviors>
                        <behaviors:EventToCommandBehavior
                            EventName="CheckedChanged"
                            Command="{Binding CountryCheckBoxAsyncCommand}"/>
                    </CheckBox.Behaviors>
                </CheckBox>
                <Label HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Text="All" />
            </StackLayout>

            <!--State-->
            <Grid Grid.Row="1" Grid.Column="0"
                  ColumnDefinitions="*, Auto" 
                  IsVisible="{Binding IsStateVisible}">
                <Entry Grid.Row="0"
                       TextColor="White" Placeholder="Type a state here..."
                       Text="{Binding StateText}"
                       CursorPosition="{Binding StateCursorPosition}"
                       IsFocused="{Binding IsStateEntryFocused}">
                    <Entry.Triggers>
                        <DataTrigger TargetType="Entry"
                                     Binding="{Binding IsStateEntryFocused}"
                                     Value="True">
                            <DataTrigger.EnterActions>
                                <triggers:FocusTriggerAction Focused="True"/>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <triggers:FocusTriggerAction Focused="False"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Entry.Triggers>
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
                            EventName="TextChanged"
                            Command="{Binding StateTextChangedAsyncCommand}"/>
                        <behaviors:EventToCommandBehavior 
                            EventName="Unfocused"
                            Command="{Binding StateUnfocusedAsyncCommand}"/>
                        <behaviors:EventToCommandBehavior 
                            EventName="Focused"
                            Command="{Binding StateFocusedCommand}" CommandParameter="False"/>
                        <behaviors:EventToCommandBehavior
                            EventName="Completed"
                            Command="{Binding StateCompletedAsyncCommand}"/>
                    </Entry.Behaviors>
                </Entry>
                <Image Grid.Column="1" 
                       VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="25"
                       IsVisible="{Binding IsStateReturnButton}"
                       Source="keyboard_return_black_48dp.png">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding StateCompletedAsyncCommand}" NumberOfTapsRequired="1" />
                    </Image.GestureRecognizers>
                </Image>
            </Grid>
            <StackLayout Grid.Row="1" Grid.Column="1"
                         VerticalOptions="Center" Orientation="Horizontal"
                         IsVisible="{Binding IsStateCheckBoxVisible}">
                <CheckBox Color="#ebb549"
                          IsChecked="{Binding IsAllState}">
                    <CheckBox.Behaviors>
                        <behaviors:EventToCommandBehavior
                            EventName="CheckedChanged"
                            Command="{Binding StateCheckBoxAsyncCommand}"/>
                    </CheckBox.Behaviors>
                </CheckBox>
                    <Label HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Text="All" />
            </StackLayout>

            <!--County-->
            <Grid Grid.Row="2" Grid.Column="0"
                  ColumnDefinitions="*, Auto"
                  IsVisible="{Binding IsCountyVisible}">
                <Entry Grid.Row="0"
                       TextColor="White" Placeholder="Type county here..."
                       Text="{Binding CountyText}"
                       IsEnabled="{Binding IsCountyEntryEnable}"
                       IsFocused="{Binding IsCountyEntryFocused}">
                    <Entry.Triggers>
                        <DataTrigger TargetType="Entry"
                                     Binding="{Binding IsCountyEntryFocused}"
                                     Value="True">
                            <DataTrigger.EnterActions>
                                <triggers:FocusTriggerAction Focused="True"/>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <triggers:FocusTriggerAction Focused="False"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Entry.Triggers>
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
                            EventName="TextChanged"
                            Command="{Binding CountyTextChangedAsyncCommand}"/>
                        <behaviors:EventToCommandBehavior 
                            EventName="Unfocused"
                            Command="{Binding CountyUnfocusedAsyncCommand}"/>
                        <behaviors:EventToCommandBehavior 
                            EventName="Focused"
                            Command="{Binding CountyFocusedCommand}" CommandParameter="False"/>
                        <behaviors:EventToCommandBehavior
                            EventName="Completed"
                            Command="{Binding CountyCompletedAsyncCommand}"/>
                    </Entry.Behaviors>
                </Entry>
                <Image Grid.Column="1" 
                       VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="25"
                       IsVisible="{Binding IsCountyReturnButton}"
                       Source="keyboard_return_black_48dp.png">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding CountyCompletedAsyncCommand}" NumberOfTapsRequired="1" />
                    </Image.GestureRecognizers>
                </Image>
            </Grid>
            <StackLayout Grid.Row="2" Grid.Column="1"
                         VerticalOptions="Center" Orientation="Horizontal"
                         IsVisible="{Binding IsCountyCheckBoxVisible}">
                <CheckBox Color="#ebb549"
                          IsChecked="{Binding IsAllCounty}">
                    <CheckBox.Behaviors>
                        <behaviors:EventToCommandBehavior
                            EventName="CheckedChanged"
                            Command="{Binding CountyCheckBoxAsyncCommand}"/>
                    </CheckBox.Behaviors>
                </CheckBox>
                <Label HorizontalTextAlignment="Center" VerticalTextAlignment="Center" Text="All" />
            </StackLayout>

            <!--City-->
            <Grid Grid.Row="3" Grid.ColumnSpan="2"
                  ColumnDefinitions="*, Auto"
                  IsVisible="{Binding IsCityVisible}"
                  IsFocused="{Binding IsCityEntryFocused}">
                <Entry Grid.Row="0"
                       TextColor="White" Placeholder="Type city here..."
                       Text="{Binding CityText}"
                       IsEnabled="{Binding IsCityEntryEnable}"
                       IsFocused="{Binding IsCityEntryFocused}">
                    <Entry.Triggers>
                        <DataTrigger TargetType="Entry"
                                     Binding="{Binding IsCityEntryFocused}"
                                     Value="True">
                            <DataTrigger.EnterActions>
                                <triggers:FocusTriggerAction Focused="True"/>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <triggers:FocusTriggerAction Focused="False"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Entry.Triggers>
                    <Entry.Behaviors>
                        <behaviors:EventToCommandBehavior
                            EventName="TextChanged"
                            Command="{Binding CityTextChangedAsyncCommand}"/>
                        <behaviors:EventToCommandBehavior 
                            EventName="Unfocused"
                            Command="{Binding CityUnfocusedAsyncCommand}"/>
                        <behaviors:EventToCommandBehavior
                            EventName="Completed"
                            Command="{Binding CityCompletedAsyncCommand}"/>
                    </Entry.Behaviors>
                </Entry>
                <Image Grid.Column="1" 
                       VerticalOptions="Center" HorizontalOptions="Center" WidthRequest="25" IsVisible="{Binding IsCityReturnButton}"
                       Source="keyboard_return_black_48dp.png">
                    <Image.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding CityCompletedAsyncCommand}" NumberOfTapsRequired="1" />
                    </Image.GestureRecognizers>
                </Image>
            </Grid>


            <!--Token display-->
            <Line Grid.Row="4" Grid.ColumnSpan="2"
                  VerticalOptions="Start" HorizontalOptions="Center"
                  X1="0" Y1="0"
                  X2="200" Y2="0"
                  StrokeLineCap="Square"
                  Stroke="MediumAquamarine"
                  StrokeThickness="5"/>

            <CollectionView Grid.Row="5" Grid.ColumnSpan="2"
                            BackgroundColor="Transparent"
                            ItemsSource="{Binding TokensCollection}">
                <CollectionView.ItemsLayout>
                    <GridItemsLayout Orientation="Vertical" Span="3" HorizontalItemSpacing="7" VerticalItemSpacing="10"/>
                </CollectionView.ItemsLayout>
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Frame HorizontalOptions="CenterAndExpand" Padding="7" CornerRadius="20" BorderColor="DarkCyan" BackgroundColor="LightGreen" HasShadow="True">
                            <Grid ColumnDefinitions="*, 15">
                                <Label Grid.Column="0" HorizontalOptions="CenterAndExpand" VerticalOptions="Center" Text="{Binding Item}" FontSize="Small" TextColor="Black"/>
                                <Image Grid.Column="1" VerticalOptions="Center" HorizontalOptions="Center"  Source="close_black_48dp.png">
                                    <Image.GestureRecognizers>
                                        <TapGestureRecognizer NumberOfTapsRequired="2"
                                                              Command="{Binding Path=TappedDeleteTokenCommand, Source={x:Reference XNameAreaSelectPopupPage}}"
                                                              CommandParameter="{Binding Item}"/>
                                    </Image.GestureRecognizers>
                                </Image>
                            </Grid>
                        </Frame>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            <!--<TapGestureRecognizer NumberOfTapsRequired="2"
                                  Command="{Binding Path=TappedDeleteTokenCommand, Source={x:Reference XNameAreaSelectPopupPage}}"
                                  CommandParameter="{Binding Item}"/>-->



            <!--Suggestion State box-->
            <ListView Grid.Row="1" Grid.RowSpan="5" Grid.Column="0"
                      Margin="8, 42, 15, 250"
                      IsVisible="{Binding IsStateSuggestion}" CachingStrategy="RecycleElement" BackgroundColor="White"
                      ItemsSource="{Binding StatesSuggestion}"
                      SelectedItem="{Binding StateSelected, Mode=TwoWay}">
                <ListView.Behaviors>
                    <behaviors:EventToCommandBehavior
                         EventName="ItemSelected"
                         Command="{Binding StateItemTappedAsyncCommand}"
                         EventArgsConverter="{StaticResource ItemSelectedEventArgsConverter}">
                    </behaviors:EventToCommandBehavior>
                </ListView.Behaviors>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Frame VerticalOptions="CenterAndExpand">
                                <StackLayout VerticalOptions="CenterAndExpand" BackgroundColor="White">
                                    <Label VerticalOptions="CenterAndExpand" VerticalTextAlignment="Center" Text="{Binding Item}" FontSize="16" TextColor="#FF464859"/>
                                </StackLayout>
                            </Frame>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>


            <!--Suggestion County box-->
            <ListView Grid.Row="2" Grid.RowSpan="4" Grid.Column="0"
                      Margin="8, 42, 15, 250"
                      IsVisible="{Binding IsCountySuggestion}" CachingStrategy="RecycleElement" BackgroundColor="White"
                      ItemsSource="{Binding CountiesSuggestion}"
                      SelectedItem="{Binding CountySelected, Mode=TwoWay}">
                <ListView.Behaviors>
                    <behaviors:EventToCommandBehavior
                        EventName="ItemSelected"
                        Command="{Binding CountyItemTappedAsyncCommand}"
                        EventArgsConverter="{StaticResource ItemSelectedEventArgsConverter}">
                    </behaviors:EventToCommandBehavior>
                </ListView.Behaviors>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Frame>
                                <StackLayout BackgroundColor="White">
                                    <Label Text="{Binding Item}" FontSize="16" TextColor="#FF464859"/>
                                </StackLayout>
                            </Frame>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>


            <!--Suggestion City box-->
            <ListView Grid.Row="3" Grid.RowSpan="3" Grid.Column="0"
                      Margin="8, 42, 15, 250"
                      IsVisible="{Binding IsCitySuggestion}" CachingStrategy="RecycleElement" BackgroundColor="White"
                      ItemsSource="{Binding CitiesSuggestion}"
                      SelectedItem="{Binding CitySelected, Mode=TwoWay}">
                <ListView.Behaviors>
                    <behaviors:EventToCommandBehavior
                        EventName="ItemSelected"
                        Command="{Binding CityItemTappedAsyncCommand}"
                        EventArgsConverter="{StaticResource ItemSelectedEventArgsConverter}">
                    </behaviors:EventToCommandBehavior>
                </ListView.Behaviors>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Frame>
                                <StackLayout BackgroundColor="White">
                                    <Label Text="{Binding Item}" FontSize="16" TextColor="#FF464859"/>
                                </StackLayout>
                            </Frame>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </xct:Popup.Content>
</xct:Popup>